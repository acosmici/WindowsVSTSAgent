{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "serverUrl": {
      "type": "string",
      "metadata": {
        "description": "Visual Studio Team Services Server url. (e.g. https://xxxxxxx.visualstudio.com)"
      }
    },
    "agentName": {
      "type": "string",
      "metadata": {
        "description": "Agent Name. No restriction"
      }
    },
    "poolName": {
      "type": "string",
      "metadata": {
        "description": "Visual Studio Team Services Agent Pool name"
      }
    },
    "PATToken": {
      "type": "string",
      "metadata": {
        "description": "Visual Studio Team Services PAT Token authentication"
      }
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS4",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14"
      ],
      "metadata": {
        "description": "Size of the Agent Server VM"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "newStorageAccountName": "[toLower(concat(variables('vmName'), 'STORAGE1'))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat(variables('vmName'),'PublicIP')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(variables('vmName'),'VNET')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "subnet",
    "subnetPrefix": "10.0.0.0/24",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "[concat(variables('vmName'),'NIC')]",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[parameters('agentName')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('agentName')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "2012-Datacenter",
                        "version": "latest"
                    },
                     "osDisk": {
                    "name": "osdisk",
                    "vhd": {
                        "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]" 
                         },         
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
                },
               
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/CustomScriptExtension')]",
                    "apiVersion": "[variables('apiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "properties": {
                         "publisher": "Microsoft.Compute",
                         "type": "CustomScriptExtension",
                          "typeHandlerVersion": "1.4",
                      "settings": {
                        "fileUris": [
                          "https://raw.githubusercontent.com/acosmici/WindowsVSTSAgent/develop/agent.zip",
                          "https://raw.githubusercontent.com/acosmici/WindowsVSTSAgent/develop/ConfigureAgent.ps1"

                        ],
                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ConfigureAgent.ps1  -serverUrl ', parameters('serverUrl'), ' -agentName ', parameters('agentName'), ' -poolName ', parameters('poolName'), ' -PATToken ', parameters('PATToken'))]"
                      }
                    }
                }
            ]
        }
    ]
}
